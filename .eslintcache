[{"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\index.js":"1","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\App.js":"2","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\datadump.js":"3","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\sidebar.js":"4","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\stats.js":"5","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\Togglebutton.js":"6","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\filter.js":"7","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\insight.js":"8","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\chart.js":"9"},{"size":433,"mtime":1610526213387,"results":"10","hashOfConfig":"11"},{"size":1442,"mtime":1610760004751,"results":"12","hashOfConfig":"11"},{"size":1594,"mtime":1610746073546,"results":"13","hashOfConfig":"11"},{"size":4608,"mtime":1610765488497,"results":"14","hashOfConfig":"11"},{"size":3582,"mtime":1610744975987,"results":"15","hashOfConfig":"11"},{"size":263,"mtime":1610759793038,"results":"16","hashOfConfig":"11"},{"size":1106,"mtime":1610755920046,"results":"17","hashOfConfig":"11"},{"size":666,"mtime":1610760979457,"results":"18","hashOfConfig":"11"},{"size":745,"mtime":1610813070343,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13s1ml3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\index.js",[],["42","43"],"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\App.js",["44","45"],"import React ,{useState,useEffect} from 'react';\nimport Data from './datadump';\nimport SideBar from './sidebar';\nimport Togglebutton from './Togglebutton';\nimport './styles.css';\nimport rawdata from './jsondata.json';\nimport {filterData , filterSpecial} from './filter';\nimport Insight from './insight';\nimport Chart from './chart';\n\n\nfunction App(){\n  \n\n  const[test,setTest] = useState({topic:'All',region:'All',sector:'All',source:'All',confidence:'50',measure:'Intensity'});\n  const[sidebarOpen,setSidebarOpen] = useState(false);\n  const toggleHandler =()=>{\n    if(!sidebarOpen){\n      setSidebarOpen(true);\n    }\n    else{\n      setSidebarOpen(false);\n    }\n  } \n  const closeHandler = () =>{\n    setSidebarOpen(false);\n  }\n\n  let sidebar\n  if(sidebarOpen){\n    sidebar = <SideBar sbar={{click:closeHandler} , {f:setTest}} />\n  }\n  //Filtering Functions\n  const filteredData = filterData(rawdata , test);\n  const chartData = filterSpecial(rawdata , test);\n\n  //Filtering Functions\n  \n  return(\n    <>\n    <div className = 'mainscreen'>\n      {sidebar}\n      <div className = 'rightscreen'>\n        <div className ='items'><Insight d ={{chartData}}/></div>\n        <div className ='items' ><Data d ={{filteredData}} p = {{test}} /></div>\n        <Chart d ={{chartData}}/>\n        <div className ='btn-items'><Togglebutton click={toggleHandler} /></div>\n      </div>\n      \n      \n    </div>\n    \n    \n    </>\n  )\n\n}\n\nexport default App;\n","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\datadump.js",["46","47","48","49","50","51","52","53"],"import React , {useState , useEffect}  from 'react'\r\n\r\nimport {findSum , findPopulation , findMean , findSD , findSE , findCI , findCL , findZ} from './stats'\r\n\r\n \r\n  \r\n\r\n\r\n\r\n\r\n\r\nconst Datadump = (props) => {\r\n  const data = props.d.filteredData;\r\n   //statistical functions\r\nconst sample_size = data.length;\r\nconst c = props.p.test.confidence;\r\n\r\n\r\nconst population_size = findPopulation(data , sample_size);\r\nconst population_sum = findSum(data , sample_size);\r\nconst mean  = findMean(population_size , population_sum); \r\nconst sd = findSD(data , sample_size , mean , population_size  );\r\nconst h_i = Math.max(...population_sum.intensity_array);\r\nconst h_r = Math.max(...population_sum.relevance_array);\r\nconst h_l = Math.max(...population_sum.likelihood_array);\r\nconst h_im = Math.max(...population_sum.impact_array);\r\nconst l_i = Math.min(...population_sum.intensity_array);\r\nconst l_r = Math.min(...population_sum.relevance_array);\r\nconst l_l = Math.min(...population_sum.likelihood_array);\r\nconst l_im = Math.min(...population_sum.impact_array);\r\nconst se = findSE(population_size , sd);\r\nconst z = findZ(c);\r\n\r\nconst ci = findCI(z , se);\r\nconst cl = findCL(ci , population_size , sd);\r\n//statistical functions\r\n  \r\n  \r\n\r\n\r\n \r\n \r\n  \r\n  \r\n    return(\r\n    \r\n   <React.Fragment>\r\n    \r\n    \r\n    \r\n    <h4> N : {population_size.intensity} | &#956; : {mean.intensity.toFixed(2)} | &#963; : {sd.intensity.toFixed(2)} | Lower : {l_i} | Upper : {h_i} | C.L : {cl.intensity.toFixed(2)}</h4>\r\n    \r\n    \r\n    \r\n \r\n    \r\n    \r\n    \r\n   </React.Fragment>\r\n  )\r\n  \r\n \r\n}\r\n\r\nexport default Datadump\r\n","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\sidebar.js",[],"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\stats.js",[],"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\Togglebutton.js",[],"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\filter.js",["54","55"],"export const filterData = (d , p) =>{\r\n let res = d;\r\n if(p.topic!=='All'){\r\n  res = res.filter((point)=> point.topic === p.topic);\r\n }\r\n \r\n if(p.sector!=='All'){\r\n  res = res.filter((point)=> point.sector === p.sector);\r\n }\r\n\r\n if(p.region!=='All'){\r\n  res = res.filter((point)=> point.region === p.region);\r\n }\r\n \r\n if(p.source!=='All'){\r\n  res = res.filter((point)=> point.source === p.source);\r\n }\r\n \r\nreturn res;\r\n\r\n}\r\n\r\nexport const filterSpecial = (d , p) =>{\r\n let res = d;\r\n if(p.topic!=='All'){\r\n  res = res.filter((point)=> point.topic === p.topic);\r\n }\r\n \r\n \r\n\r\n if(p.region!=='All'){\r\n  res = res.filter((point)=> point.region === p.region);\r\n }\r\n \r\n if(p.source!=='All'){\r\n  res = res.filter((point)=> point.source === p.source);\r\n }\r\n \r\nreturn res;\r\n\r\n}\r\n\r\n export const makeObj =(data) =>{\r\n  let res = {};\r\n  data.map((point)=>{\r\n   if(point.intensity ==''){\r\n    \r\n   }\r\n   else if(!(point.sector in res)){\r\n    res = {...res, [point.sector]:parseInt(point.intensity)}\r\n  }\r\n  else{\r\n   res[point.sector] = res[point.sector] + parseInt(point.intensity);\r\n  }\r\n\r\n  })\r\n  return res;\r\n\r\n } ","C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\insight.js",[],"C:\\Users\\Harshit Parvatiyar\\Desktop\\BlackCoffer Task\\blackcoffer-data-dashboard\\src\\chart.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":25,"nodeType":"62","messageId":"63","endLine":1,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":31,"column":51,"nodeType":"66","messageId":"67","endLine":31,"endColumn":52},{"ruleId":"60","severity":1,"message":"68","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":37},{"ruleId":"60","severity":1,"message":"69","line":24,"column":7,"nodeType":"62","messageId":"63","endLine":24,"endColumn":10},{"ruleId":"60","severity":1,"message":"70","line":25,"column":7,"nodeType":"62","messageId":"63","endLine":25,"endColumn":10},{"ruleId":"60","severity":1,"message":"71","line":26,"column":7,"nodeType":"62","messageId":"63","endLine":26,"endColumn":11},{"ruleId":"60","severity":1,"message":"72","line":28,"column":7,"nodeType":"62","messageId":"63","endLine":28,"endColumn":10},{"ruleId":"60","severity":1,"message":"73","line":29,"column":7,"nodeType":"62","messageId":"63","endLine":29,"endColumn":10},{"ruleId":"60","severity":1,"message":"74","line":30,"column":7,"nodeType":"62","messageId":"63","endLine":30,"endColumn":11},{"ruleId":"75","severity":1,"message":"76","line":45,"column":19,"nodeType":"77","messageId":"78","endLine":45,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":46,"column":23,"nodeType":"81","messageId":"82","endLine":46,"endColumn":25},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useState' is defined but never used.","'h_r' is assigned a value but never used.","'h_l' is assigned a value but never used.","'h_im' is assigned a value but never used.","'l_r' is assigned a value but never used.","'l_l' is assigned a value but never used.","'l_im' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]